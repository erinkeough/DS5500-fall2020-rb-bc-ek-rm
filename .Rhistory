county = 'Suffolk',
year=2012,
geometry = T,
survey = "acs5",
output = "wide"
)
tm_shape(bach12)+
tm_fill(col = "DP02_0067E",
palette = "Blues",
style = 'jenks',
title = "Bach. or Higher\nEduc '12")+
tm_borders(col = "darkgray")
vacs13<-load_variables(2013, "acs1/profile")
View(vacs13)
View(vacs13)
# Bach or higher Ed '12
bach12<-get_acs(
geography = "tract",
variables = "DP02_0067E",
state = 'MA',
county = 'Suffolk',
year=2012,
geometry = T,
survey = "acs5",
output = "wide"
)
View(bach12)
# Bach or higher Ed '12
bach12<-get_acs(
geography = "tract",
variables = "DP02_0065E",
state = 'MA',
county = 'Suffolk',
year=2012,
geometry = T,
survey = "acs5",
output = "wide"
)
# Bach or higher Ed '12
bach12<-get_acs(
geography = "tract",
variables = "DP02_0066E",
state = 'MA',
county = 'Suffolk',
year=2012,
geometry = T,
survey = "acs5",
output = "wide"
)
# Bach or higher Ed '12
bach12<-get_acs(
geography = "tract",
variables = "DP02_0065E",
state = 'MA',
county = 'Suffolk',
year=2012,
geometry = T,
survey = "acs5",
output = "wide"
)
# Bach or higher Ed '12
bach12<-get_acs(
geography = "tract",
variables = c("DP02_0065E","DP02_0064E"),
state = 'MA',
county = 'Suffolk',
year=2012,
geometry = T,
survey = "acs5",
output = "wide"
)
bach12$bachUp<-bach12$DP02_0065E+bach12$DP02_0064E
tm_shape(bach12)+
tm_fill(col = bachUp,
palette = "Blues",
style = 'jenks',
title = "Bach. or Higher\nEduc '12")+
tm_borders(col = "darkgray")
tm_shape(bach12)+
tm_fill(col = "bachUp",
palette = "Blues",
style = 'jenks',
title = "Bach. or Higher\nEduc '12")+
tm_borders(col = "darkgray")
#######  call for data profiles  #########
#### cannot make a call to different API's at same time (ie different prefixes of variables)
bos_acs12<-get_acs(
geography = "tract", # size of municipalities to zoom in on
variables = acs_vars,
state = 'MA', # optional: State 25 is MA
county = 'Suffolk', # Suffolk county is '025'
year=2012,
geometry = T, # for map visualizations
survey = "acs5", # survey you are choosing from (also supports 'acs5')
output = "wide"
)
bos_acs12_pop<-get_acs(
geography = "tract",
variables = "B01001_001E",
state = 'MA',
county = 'Suffolk',
year=2012,
geometry = T,
survey = "acs5",
output = "wide"
)
bos_acs12<-bos_acs12_pop%>%
select(-NAME)%>%
left_join(bos_acs12, by = "GEOID")%>%
mutate(adjMHI = DP03_0062E*1.0935)
bos_acs12<-bos_acs12_pop%>%
select(-NAME)%>%
st_join(bos_acs12, by = "GEOID")%>%
mutate(adjMHI = DP03_0062E*1.0935)
bos_acs12<-bos_acs12%>%
select(-NAME)%>%
left_join(bos_acs12_pop, by = "GEOID")%>%
mutate(adjMHI = DP03_0062E*1.0935)
bos_acs12_pop<-get_acs(
geography = "tract",
variables = "B01001_001E",
state = 'MA',
county = 'Suffolk',
year=2012,
#geometry = T,
survey = "acs5",
output = "wide"
)
bos_acs12<-bos_acs12%>%
select(-NAME)%>%
left_join(bos_acs12_pop, by = "GEOID")%>%
mutate(adjMHI = DP03_0062E*1.0935)
#######  call for data profiles  #########
#### cannot make a call to different API's at same time (ie different prefixes of variables)
bos_acs12<-get_acs(
geography = "tract", # size of municipalities to zoom in on
variables = acs_vars,
state = 'MA', # optional: State 25 is MA
county = 'Suffolk', # Suffolk county is '025'
year=2012,
geometry = T, # for map visualizations
survey = "acs5", # survey you are choosing from (also supports 'acs5')
output = "wide"
)
bos_acs12_pop<-get_acs(
geography = "tract",
variables = "B01001_001E",
state = 'MA',
county = 'Suffolk',
year=2012,
#geometry = T,
survey = "acs5",
output = "wide"
)
bos_acs12<-bos_acs12%>%
select(-NAME)%>%
left_join(bos_acs12_pop, by = "GEOID")%>%
mutate(adjMHI = DP03_0062E*1.0935)
View(bos_acs12)
##### getting 2019 data
bos_acs18<-get_acs(
geography = "tract",
variables = acs_vars,
state = 'MA',
county = 'Suffolk',
year=2018,
geometry = T,
survey = "acs5",
output = "wide"
)
bos_acs18_pop<-get_acs(
geography = "tract",
variables = "B01001_001E",
state = 'MA',
county = 'Suffolk',
year=2018,
survey = "acs5",
output = "wide"
)
bos_acs18<-bos_acs18%>%
select(-NAME)%>%
left_join(bos_acs18_pop, by = "GEOID")
tm_shape(bos_acs18)+
tm_fill(col = "DP03_0062E",
palette = "Greens",
style = 'jenks',
title = "Median HH\nIncome '18")+
tm_borders(col = "darkgray")
tm_shape(bos_acs12)+
tm_fill(col = "DP03_0062E",
palette = "Blues",
style = 'jenks',
title = "Median HH\nIncome '12")+
tm_borders(col = "darkgray")
tm_shape(bos_acs12)+
tm_fill(col = "adjMHI",
palette = "Blues",
style = 'jenks',
title = "Median HH\nIncome '12")+
tm_borders(col = "darkgray")
tm_shape(bos_acs18)+
tm_fill(col = "DP03_0062E",
palette = "Greens",
style = 'jenks',
title = "Median HH\nIncome '18")+
tm_borders(col = "darkgray")
bos_acs12<-bos_acs12%>%
mutate(percEng = DP02_0112E/B01001_001E, percWhite = DP05_0032E/B01001_001E)
bos_acs18<-bos_acs18%>%
mutate(percEng = DP02_0112E/B01001_001E, percWhite = DP05_0032E/B01001_001E)
a
tm_shape(bos_acs18)+
tm_fill(col = "percEng",
palette = "Greens",
style = 'jenks',
title = "% Eng. Only HH '18")+
tm_borders(col = "darkgray")
bos_acs12<-bos_acs12%>%
mutate(percEng = 100*DP02_0112E/B01001_001E, percWhite = 100*DP05_0032E/B01001_001E)
bos_acs18<-bos_acs18%>%
mutate(percEng = 100*DP02_0112E/B01001_001E, percWhite = 100*DP05_0032E/B01001_001E)
tm_shape(bos_acs18)+
tm_fill(col = "percEng",
palette = "Greens",
style = 'jenks',
title = "% Eng. Only HH '18")+
tm_borders(col = "darkgray")
tm_shape(bos_acs18)+
tm_fill(col = "percWhite",
palette = "Greens",
style = 'jenks',
title = "% Eng. Only HH '18")+
tm_borders(col = "darkgray")
View(bos_acs12)
### '11 variables in order ( total pop,
######                       median income, Ed. Attainment: <9th, 9th-12th, HS Dip., some col, assoc deg, bach or higher,
######                       white, black, Nat. Am., asian, HI or PAI,
######                       lang at home eng only, lang at home other, lang other than eng and eng not spoken 'well')
acs_vars<-c(#"B01001_001E",
"DP03_0062E", "DP02_0059E","DP02_0060E","DP02_0061E","DP02_0062E", "DP02_0063E", "DP02_0067E",
"DP05_0032E", "DP05_0033E","DP05_0034E", "DP05_0039E", "DP05_0047E",
"DP02_0111PE", "DP02_0113E", "DP02_0114E")
#######  call for data profiles  #########
#### cannot make a call to different API's at same time (ie different prefixes of variables)
bos_acs12<-get_acs(
geography = "tract", # size of municipalities to zoom in on
variables = acs_vars,
state = 'MA', # optional: State 25 is MA
county = 'Suffolk', # Suffolk county is '025'
year=2012,
geometry = T, # for map visualizations
survey = "acs5", # survey you are choosing from (also supports 'acs5')
output = "wide"
)
bos_acs12_pop<-get_acs(
geography = "tract",
variables = "B01001_001E",
state = 'MA',
county = 'Suffolk',
year=2012,
#geometry = T,
survey = "acs5",
output = "wide"
)
bos_acs12<-bos_acs12%>%
select(-NAME)%>%
left_join(bos_acs12_pop, by = "GEOID")%>%
mutate(adjMHI = DP03_0062E*1.0935,
percEng = DP02_0111PE,
percWhite = 100*DP05_0032E/B01001_001E)
##### getting 2019 data
bos_acs18<-get_acs(
geography = "tract",
variables = acs_vars,
state = 'MA',
county = 'Suffolk',
year=2018,
geometry = T,
survey = "acs5",
output = "wide"
)
bos_acs18_pop<-get_acs(
geography = "tract",
variables = "B01001_001E",
state = 'MA',
county = 'Suffolk',
year=2018,
survey = "acs5",
output = "wide"
)
bos_acs18<-bos_acs18%>%
select(-NAME)%>%
left_join(bos_acs18_pop, by = "GEOID")%>%
mutate(percEng = DP02_0111PE, percWhite = 100*DP05_0032E/B01001_001E)
tm_shape(bos_acs18)+
tm_fill(col = "percEng",
palette = "Greens",
style = 'jenks',
title = "% Eng. Only HH '18")+
tm_borders(col = "darkgray")
tm_shape(bos_acs12)+
tm_fill(col = "percEng",
palette = "Blues",
style = 'jenks',
title = "% Eng. Only HH '12")+
tm_borders(col = "darkgray")
require(tidyverse)
require(tidycensus)
require(tmap)
### '11 variables in order ( total pop,
######                       median income, Ed. Attainment: <9th, 9th-12th, HS Dip., some col, assoc deg, bach or higher,
######                       white, black, Nat. Am., asian, HI or PAI,
######                       lang at home eng only, lang at home other, lang other than eng and eng not spoken 'well')
acs_vars<-c(#"B01001_001E",
"DP03_0062E", "DP02_0059E","DP02_0060E","DP02_0061E","DP02_0062E", "DP02_0063E", "DP02_0067E",
"DP05_0032E", "DP05_0033E","DP05_0034E", "DP05_0039E", "DP05_0047E",
"DP02_0111PE", "DP02_0113E", "DP02_0114E")
bos_acs12<-get_decennial(
geography = "tract", # size of municipalities to zoom in on
variables = acs_vars,
state = 'MA', # optional: State 25 is MA
county = 'Suffolk', # Suffolk county is '025'
year=1990,
geometry = T, # for map visualizations
#survey = "acs5", # survey you are choosing from (also supports 'acs5')
output = "wide"
)
require(tidyverse)
require(tidycensus)
require(tmap)
require(tidyverse)
require(tidycensus)
require(tmap)
?get_decennial
?load_variables()
tract90<-read.dbf('~/Downloads/STF3A_25.dbf')
install.packages("foreign")
require(tidycensus)
require(tidyverse)
tract90<-read_csv("Desktop/STF3A_25.csv")
View(tract90)
tract90<-tract90 %>% filter(CNTY=="025")
unique("FIPS")
unique(tract90$FIPS)
?group_by
tract90<-tract90 %>%
filter(CNTY=="025") %>%
select(TRACT, P0010001, P0050001, P0290001,P080A001,
P0570001, P0570002, P0570003, P0570004, P0570005, P0570006, P0570007,
P0120001, P0120002, P0120003, P0120004, P0120005)%>%
group_by(TRACT)%>%summarise(tot_pop = sum(P0010001),
num_hh = sum(P0050001),
rc_white = sum(P0120001),
rc_black = sum(P0120002),
rc_ai = sum(P0120003),
rc_asian = sum(P0120004),
rc_other = sum(P0120005),
hh_english = sum(P0290001),
ed_9 = sum(P0570001),
ed_912 = sum(P0570002),
ed_hs = sum(P0570003),
ed_some_col = sum(P0570004),
ed_assoc = sum(P0570005),
ed_ba = sum(P0570006),
ed_grad = sum(P0570007))
tract90<-tract90 %>%
filter(CNTY=="025") %>%
select(TRACT, P0010001, P0050001, P0290001,P080A001,
P0570001, P0570002, P0570003, P0570004, P0570005, P0570006, P0570007,
P0120001, P0120002, P0120003, P0120004, P0120005)%>%
group_by(TRACT)%>%summarise(tot_pop = sum(P0010001),
num_hh = sum(P0050001),
rc_white = sum(P0120001),
rc_black = sum(P0120002),
rc_ai = sum(P0120003),
rc_asian = sum(P0120004),
rc_other = sum(P0120005),
hh_english = sum(P0290001),
ed_9 = sum(P0570001),
ed_912 = sum(P0570002),
ed_hs = sum(P0570003),
ed_some_col = sum(P0570004),
ed_assoc = sum(P0570005),
ed_ba = sum(P0570006),
ed_grad = sum(P0570007),
med_inc = mean(P080A001))
tract90<-read_csv("Desktop/STF3A_25.csv")%>%
filter(CNTY=="025") %>%
select(TRACT, P0010001, P0050001, P0290001,P080A001,
P0570001, P0570002, P0570003, P0570004, P0570005, P0570006, P0570007,
P0120001, P0120002, P0120003, P0120004, P0120005)%>%
group_by(TRACT)%>%summarise(tot_pop = sum(P0010001),
num_hh = sum(P0050001),
rc_white = sum(P0120001),
rc_black = sum(P0120002),
rc_ai = sum(P0120003),
rc_asian = sum(P0120004),
rc_other = sum(P0120005),
hh_english = sum(P0290001),
ed_9 = sum(P0570001),
ed_912 = sum(P0570002),
ed_hs = sum(P0570003),
ed_some_col = sum(P0570004),
ed_assoc = sum(P0570005),
ed_ba = sum(P0570006),
ed_grad = sum(P0570007),
med_inc = mean(P080A001))
tract90<-read_csv("Desktop/STF3A_25.csv")
tract90<-tract90%>%
filter(CNTY=="025") %>%
select(TRACT, P0010001, P0050001, P0290001,P080A001,
P0570001, P0570002, P0570003, P0570004, P0570005, P0570006, P0570007,
P0120001, P0120002, P0120003, P0120004, P0120005)%>%
group_by(TRACT)%>%summarise(tot_pop = sum(P0010001),
num_hh = sum(P0050001),
rc_white = sum(P0120001),
rc_black = sum(P0120002),
rc_ai = sum(P0120003),
rc_asian = sum(P0120004),
rc_other = sum(P0120005),
hh_english = sum(P0290001),
ed_9 = sum(P0570001),
ed_912 = sum(P0570002),
ed_hs = sum(P0570003),
ed_some_col = sum(P0570004),
ed_assoc = sum(P0570005),
ed_ba = sum(P0570006),
ed_grad = sum(P0570007),
med_inc = mean(P080A001))
unique(tract90$TRACT)
tract90<-read_csv("Desktop/STF3A_25.csv")
tract90<-tract90%>%
filter(CNTY=="025") %>% mutate(TRACT = as.factor(TRACT))%>%
select(TRACT, P0010001, P0050001, P0290001,P080A001,
P0570001, P0570002, P0570003, P0570004, P0570005, P0570006, P0570007,
P0120001, P0120002, P0120003, P0120004, P0120005)%>%
group_by(TRACT)%>%summarise(tot_pop = sum(P0010001),
num_hh = sum(P0050001),
rc_white = sum(P0120001),
rc_black = sum(P0120002),
rc_ai = sum(P0120003),
rc_asian = sum(P0120004),
rc_other = sum(P0120005),
hh_english = sum(P0290001),
ed_9 = sum(P0570001),
ed_912 = sum(P0570002),
ed_hs = sum(P0570003),
ed_some_col = sum(P0570004),
ed_assoc = sum(P0570005),
ed_ba = sum(P0570006),
ed_grad = sum(P0570007),
med_inc = mean(P080A001))
tract90<-read_csv("Desktop/STF3A_25.csv")
class(tract90$TRACT)
unique(tract90$TRACT)
tract90%>%group_by(TRACT)%>%summarise(tot_pop = sum(P0010001))
tract90%>%group_by(TRACT)%>%summarise(tot_pop = sum(P0010001))%>%View()
tract90_bos<-tract90%>%
filter(CNTY=="025") %>% mutate(TRACT = as.factor(TRACT))%>%
select(TRACT, P0010001, P0050001, P0290001,P080A001,
P0570001, P0570002, P0570003, P0570004, P0570005, P0570006, P0570007,
P0120001, P0120002, P0120003, P0120004, P0120005)%>%
group_by(TRACT)%>%summarise(tot_pop = sum(P0010001),
num_hh = sum(P0050001),
rc_white = sum(P0120001),
rc_black = sum(P0120002),
rc_ai = sum(P0120003),
rc_asian = sum(P0120004),
rc_other = sum(P0120005),
hh_english = sum(P0290001),
ed_9 = sum(P0570001),
ed_912 = sum(P0570002),
ed_hs = sum(P0570003),
ed_some_col = sum(P0570004),
ed_assoc = sum(P0570005),
ed_ba = sum(P0570006),
ed_grad = sum(P0570007),
med_inc = mean(P080A001))
View(tract90_bos)
View(tract90_bos)
View(tract90_bos)
?get_decennial
get_decennial(geography = "tract", variables = "DP03_0062E", state = "MA", county = "Suffolk",
year = 2010, output = "wide")
get_decennial(geography = "tract", variables = "H004002", state = "MA", county = "Suffolk",
year = 2010, output = "wide")
View(tract90_bos)
bos00<-read_csv("census-csv/bos_2000.csv")
bos10<-read_csv("census-csv/bos_2010_trim.csv")
bos90<-read_csv("census-csv/bos_90.csv")
require(tidyverse)
bos00<-read_csv("census-csv/bos_2000.csv")
bos10<-read_csv("census-csv/bos_2010_trim.csv")
bos90<-read_csv("census-csv/bos_90.csv")
setwd("Desktop/DS5500-fall2020-rb-bc-ek-rm/census-csv/")
setwd('..
')
setwd('..')
bos00<-read_csv("census-csv/bos_2000.csv")
bos10<-read_csv("census-csv/bos_2010_trim.csv")
bos90<-read_csv("census-csv/bos_90.csv")
inc_00<-bos00%>%select(GEOID, med_income00)
inc_10<-bos10%>%select(GEOID, med_income_10)
inc_90<-bos90%>%select(GEOID, med_income_90)
gent<-read_csv("Research/GentrifiedNbhds.csv")
gent_inc<-gent%>%rename(GEOID=tract, med_income_gent=`Median Household Income`)%>%
select(GEOID, med_income_gent)
rm(gent, bos00, bos10, bos90)
rm(tract90, tract90_bos)
full_join(inc_10, gent_inc, by = "GEOID")%>%View()
full_join(inc_10, gent_inc, by = "GEOID")%>%
drop_na(med_income_gent)%>%View()
