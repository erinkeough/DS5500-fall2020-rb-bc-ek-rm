## Suffolk county Nominal data from NHGIS
suff_nom<-read_csv("~/Desktop//census_suffolk_nominal.csv")
require(tidyverse)
## Suffolk county Nominal data from NHGIS
suff_nom<-read_csv("~/Desktop//census_suffolk_nominal.csv")
View(suff_nom)
## Suffolk county Nominal data from NHGIS
suff_nom<-read_csv("~/Desktop/census_suffolk_nominal.csv")%>%select(-X1)
rel00_10<-read_csv("census-csv/marelationship0010.csv", col_types = "ccccddcddccccddcdddddddddddddd")%>%
filter(COUNTY00 == "025")%>%
select(-contains("STATE"),
-contains("COUNTY"),
-contains("GEOID"))
rel90_00 <-
read_csv("census-csv/suffrelationship9000.txt", col_names = F) %>%
mutate(
TRACT90 = str_sub(X1, 6, 11),
PART90 = ifelse(str_sub(X1, 12, 12) == "P", "P", "W"),
POP90 = as.numeric(str_sub(X1, 13, 21)),
POPPCT90 = as.numeric(str_sub(X1, 22, 25)) / 1000,
TRACT00 = str_sub(X1, 31, 36),
PART00 = ifelse(str_sub(X1, 37, 37) == "P", "P", "W"),
POP00 = as.numeric(str_sub(X1, 38, 46)),
POPPCT00 = as.numeric(str_sub(X1, 47, 50)) / 1000
) %>%
select(-X1) %>% filter(TRACT00 != "000000", TRACT90 != "000000")
setwd("~/Desktop/DS5500-fall2020-rb-bc-ek-rm/")
rel90_00 <-
read_csv("census-csv/suffrelationship9000.txt", col_names = F) %>%
mutate(
TRACT90 = str_sub(X1, 6, 11),
PART90 = ifelse(str_sub(X1, 12, 12) == "P", "P", "W"),
POP90 = as.numeric(str_sub(X1, 13, 21)),
POPPCT90 = as.numeric(str_sub(X1, 22, 25)) / 1000,
TRACT00 = str_sub(X1, 31, 36),
PART00 = ifelse(str_sub(X1, 37, 37) == "P", "P", "W"),
POP00 = as.numeric(str_sub(X1, 38, 46)),
POPPCT00 = as.numeric(str_sub(X1, 47, 50)) / 1000
) %>%
select(-X1) %>% filter(TRACT00 != "000000", TRACT90 != "000000")
rel00_10<-read_csv("census-csv/marelationship0010.csv", col_types = "ccccddcddccccddcdddddddddddddd")%>%
filter(COUNTY00 == "025")%>%
select(-contains("STATE"),
-contains("COUNTY"),
-contains("GEOID"))
source('~/Desktop/DS5500-fall2020-rb-bc-ek-rm/Data Retrieval/relationship_functions.R')
View(suff_nom)
nom_translate_9000<-tract_translate(suff_nom, rel90_00,"1990", "2000")
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
View(nom_translate_9000)
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
View(dest_df)
dest_df[dest_df[[col_after]]==t_after,c_index]
View(rel_df)
View(rel00_10)
rel00_10<-read_csv("census-csv/marelationship0010.csv", col_types = "ccccddcddccccddcdddddddddddddd")%>%
filter(COUNTY00 == "025")%>%
select(-contains("STATE"),
-contains("COUNTY"),
-contains("GEOID"))%>%
rename(TRACT12=TRACT10)
View(rel00_10)
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
View(rel_df)
dest_df[dest_df[[col_after]]==t_after,c_index]
subset_data[subset_data[[col_before]]==t_before, c_index]
subset_data[subset_data[[col_before]]==t_before, c_index]*1
subset_data[subset_data[[col_before]]==t_before, c_index]*0
subset_data[subset_data[[col_before]]==t_before, c_index]*0+1
debugSource('~/Desktop/DS5500-fall2020-rb-bc-ek-rm/Data Retrieval/relationship_functions.R')
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
debugSource('~/Desktop/DS5500-fall2020-rb-bc-ek-rm/Data Retrieval/relationship_functions.R')
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
View(dest_df)
View(dest_df)
View(dest_df)
View(dest_df)
View(rel_df)
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
source('~/Desktop/DS5500-fall2020-rb-bc-ek-rm/Data Retrieval/relationship_functions.R')
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
?tryCatch
e <- simpleError("test error")
## Not run:
stop(e)
tryCatch(stop(e), finally = print("Hello"))
source('~/Desktop/DS5500-fall2020-rb-bc-ek-rm/Data Retrieval/relationship_functions.R')
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
source('~/Desktop/DS5500-fall2020-rb-bc-ek-rm/Data Retrieval/relationship_functions.R')
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
source('~/Desktop/DS5500-fall2020-rb-bc-ek-rm/Data Retrieval/relationship_functions.R')
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
tryCatch(0,finally = print("no"))
tryCatch(1,finally = print("no"))
tryCatch(34>3,finally = print("no"))
tryCatch(stop("fred"), finally = print("Hello"))
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
dim(rel00_10)
dim(rel90_00)
dim(rel00_10) == dim(rel00_10)
dim(rel00_10) == dim(rel90_00)
source('~/Desktop/DS5500-fall2020-rb-bc-ek-rm/Data Retrieval/relationship_functions.R')
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
debugSource('~/Desktop/DS5500-fall2020-rb-bc-ek-rm/Data Retrieval/relationship_functions.R')
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
View(dest_df)
View(nom_data)
View(rel_df)
View(dest_df)
rel00_10<-read_csv("census-csv/marelationship0010.csv", col_types = "ccccddcddccccddcdddddddddddddd")%>%
filter(COUNTY00 == "025", COUNTY10 == "025")%>%
select(-contains("STATE"),
-contains("COUNTY"),
-contains("GEOID"))%>%
rename(TRACT12=TRACT10)
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
nom_translate_0010<-tract_translate(suff_nom, rel00_10, "2000", "2012")
rel00_10<-read_csv("census-csv/marelationship0010.csv", col_types = "ccccddcddccccddcdddddddddddddd")%>%
filter(COUNTY00 == "025", COUNTY10 == "025")
View(rel00_10)
nom_12_tracts<-str_sub(suff_nom$GIS.Join.Match.Code..2012, 9)
nom_12_tracts
suff_nom$GIS.Join.Match.Code..201
suff_nom$GIS.Join.Match.Code..2012
as_tibble(suff_nom$GIS.Join.Match.Code..2012)
as_tibble(suff_nom$GIS.Join.Match.Code..2012)%>%filter(!is.na(value))
nom_12_tracts<-as_tibble(suff_nom$GIS.Join.Match.Code..2012)%>%filter(!is.na(value))%>%mutate(tract = str_sub(value, 9))
nom_12_tracts
nom_12_tracts$tract==rel00_10$TRACT10
sort(nom_12_tracts$tract)==sort(rel00_10$TRACT10)
nom_12_tracts<-sort(nom_12_tracts$tract)
nom_12_tracts[3]
rel00_10$TRACT10 == "000202"
sort(nom_12_tracts$tract)==sort(unique(rel00_10$TRACT10))
nom_12_tracts==sort(unique(rel00_10$TRACT10))
