mutate(adjMHI = DP03_0062E*1.0935,
percEng = DP02_0111PE,
percWhite = 100*DP05_0032E/B01001_001E)%>%
mutate(GEOID = str_remove(bos_acs10$GEOID, "25025"))%>%
filter(bos10, str_detect(GEOID, "^9"))
filter(bos10, str_detect(GEOID, "^9"))
filter(bos10, !str_detect(GEOID, "^9"))
bos10<-filter(bos10, !str_detect(GEOID, "^9"))
View(bos10)
comp<-tibble(yr00 = sort(bos00$GEOID), yr10 = sort(bos10$GEOID))%>%mutate(same = (yr00==yr10))
comp<-tibble(yr00 = sort(c(bos00$GEOID, "000000")), yr10 = sort(bos10$GEOID))%>%mutate(same = (yr00==yr10))
View(comp)
comp<-tibble(yr00 = sort(c(bos00$GEOID, "990000")), yr10 = sort(bos10$GEOID))%>%mutate(same = (yr00==yr10))
tract90<-read_csv("bos_90.csv")
tract90<-read_csv("census-csv/bos_90.csv")
View(tract90)
rm(comp)
require(tidyverse)
require(tidycensus)
### '11 variables in order ( total pop,
######                       median income, Ed. Attainment: <9th, 9th-12th, HS Dip., some col, assoc deg, bach or higher,
######                       white, black, Nat. Am., asian, HI or PAI,
######                       lang at home eng only, lang at home other, lang other than eng and eng not spoken 'well')
acs_vars<-c(#"B01001_001E",
"DP03_0062E", "DP02_0059E","DP02_0060E","DP02_0061E","DP02_0062E", "DP02_0063E", "DP02_0067E",
"DP05_0032E", "DP05_0033E","DP05_0034E", "DP05_0039E", "DP05_0047E",
"DP02_0111PE", "DP02_0113E", "DP02_0114E")
#######  call for data profiles  #########
#### cannot make a call to different API's at same time (ie different prefixes of variables)
bos_acs10<-get_acs(
geography = "tract", # size of municipalities to zoom in on
variables = acs_vars,
state = 'MA', # optional: State 25 is MA
county = 'Suffolk', # Suffolk county is '025'
year=2010,
geometry = T, # for map visualizations
survey = "acs5", # survey you are choosing from (also supports 'acs5')
output = "wide"
)
bos_acs10_pop<-get_acs(
geography = "tract",
variables = "B01001_001E",
state = 'MA',
county = 'Suffolk',
year=2010,
#geometry = T,
survey = "acs5",
output = "wide"
)
bos10<-bos_acs10%>%
select(-NAME)%>%
left_join(bos_acs10_pop, by = "GEOID")%>%
mutate(adjMHI = DP03_0062E*1.0935,
percEng = DP02_0111PE,
percWhite = 100*DP05_0032E/B01001_001E)%>%
mutate(GEOID = str_remove(bos_acs10$GEOID, "25025"))%>%
filter(!str_detect(GEOID, "^9"))
View(bos10)
bos10%>%rename(tot_pop = B01001_001E,
med_income = DP03_0062E, ed_hs = DP02_0059E+DP02_0060E+DP02_0061E, ed_ba = DP02_0067E,
rc_white =DP05_0032E, lang_eng = DP02_0111PE)%>%View()
bos10%>%mutate(tot_pop = B01001_001E,
med_income = DP03_0062E, ed_hs = DP02_0059E+DP02_0060E+DP02_0061E, ed_ba = DP02_0067E,
rc_white =DP05_0032E, lang_eng = DP02_0111PE)%>%View()
bos10_trim<-bos10%>%mutate(tot_pop = B01001_001E,
med_income = DP03_0062E, ed_hs = DP02_0059E+DP02_0060E+DP02_0061E,
rc_white =DP05_0032E, lang_eng = DP02_0111PE)%>%select(tot_pop, med_income, ed_hs, rc_white, lang_eng)
write_csv(bos10_trim, "census-csv/bos_2010_trim.csv")
### ( total pop,
####  median income, Ed. Attainment: <9th, 9th-12th, HS Dip., some col, assoc deg, bach or higher,
####  white, black, Nat. Am., asian, HI or PAI,
##### lang at home eng only, lang at home other, lang other than eng and eng not spoken 'well')
# acs_vars<-c(#"B01001_001E",
#   "DP03_0062E", "DP02_0059E","DP02_0060E","DP02_0061E","DP02_0062E", "DP02_0063E",
#   "DP05_0032E", "DP05_0033E","DP05_0034E", "DP05_0039E", "DP05_0047E",
#   "DP02_0111PE", "DP02_0113E", "DP02_0114E")
bos10_trim<-bos10%>%
mutate(tot_pop = B01001_001E,
med_income = DP03_0062E, ed_hs = DP02_0059E+DP02_0060E+DP02_0061E,
rc_white =DP05_0032E, lang_eng = DP02_0111PE)%>%
select(tot_pop, med_income, ed_hs, rc_white, lang_eng, percEng, percWhite)
write_csv(bos10_trim, "census-csv/bos_2010_trim.csv")
rm(bos_acs10, bos_acs10_pop, bos10)
rm(acs_vars)
##     2000 Census data by Tract of Suffolk county MA (Boston, ma)
##
## Scraping from FFIEC website (both pages)
bos001<-read_html("https://www.ffiec.gov/census/report.aspx?year=2000&county=025&tract=ALL&state=25&report=demographic")%>%
html_node("form table")%>%
html_table()
require(rvest)
##     2000 Census data by Tract of Suffolk county MA (Boston, ma)
## require(rvest)
## Scraping from FFIEC website (both pages)
bos001<-read_html("https://www.ffiec.gov/census/report.aspx?year=2000&county=025&tract=ALL&state=25&report=demographic")%>%
html_node("form table")%>%
html_table()
bos002<-read_html("https://www.ffiec.gov/census/report.aspx?year=2000&county=025&tract=ALL&state=25&report=demographic&page=2")%>%
html_node("form table")%>%
html_table()
bostract00<-rbind(bos001, bos002)
rm(bos001, bos002)
### Clean up names and
bostract00<-bostract00%>%
rename(tract = `Tract Code`, med_income00 = `2000 Est. Tract/ BNA Median Family Income`,
med_income90 = `1990 Tract/ BNA Median Family Income`, tot_pop = `Tract/ BNA Population`,
nonwhite_pop = `Minority Population`, owner_occ = `Owner Occupied Units`)%>%
select(tract, med_income00, med_income90, tot_pop, nonwhite_pop, owner_occ)
bos00<-bostract00%>%
mutate(GEOID = ifelse(str_detect(as.character(tract), "\\."), as.character(tract), paste0(as.character(tract),".00")),
med_income00 = str_remove_all(med_income00, "[\\$\\,]"),
med_income90 = str_remove_all(med_income90, "[\\$\\,]"))%>%
mutate(GEOID = str_pad(GEOID, width = 7, pad = "0"))%>%
mutate(GEOID = str_remove(GEOID, "\\."))
bos00<-bos00%>%
mutate(GEOID = str_pad(as.character(tract),width = 6, side = "right", pad ="0"))%>%
select(-tract)
rm(bostract00)
View(bos00)
bos00_csv<-read_csv("census-csv/bos_2000.csv")
View(bos00_csv)
View(bos10_trim)
### '11 variables in order ( total pop,
######                       median income, Ed. Attainment: <9th, 9th-12th, HS Dip., some col, assoc deg, bach or higher,
######                       white, black, Nat. Am., asian, HI or PAI,
######                       lang at home eng only, lang at home other, lang other than eng and eng not spoken 'well')
acs_vars<-c(#"B01001_001E",
"DP03_0062E", "DP02_0059E","DP02_0060E","DP02_0061E","DP02_0062E", "DP02_0063E",
"DP05_0032E", "DP05_0033E","DP05_0034E", "DP05_0039E", "DP05_0047E",
"DP02_0111PE", "DP02_0113E", "DP02_0114E")
#######  call for data profiles  #########
#### cannot make a call to different API's at same time (ie different prefixes of variables)
bos_acs10<-get_acs(
geography = "tract", # size of municipalities to zoom in on
variables = acs_vars,
state = 'MA', # optional: State 25 is MA
county = 'Suffolk', # Suffolk county is '025'
year=2010,
geometry = T, # for map visualizations
survey = "acs5", # survey you are choosing from (also supports 'acs5')
output = "wide"
)
bos_acs10_pop<-get_acs(
geography = "tract",
variables = "B01001_001E",
state = 'MA',
county = 'Suffolk',
year=2010,
#geometry = T,
survey = "acs5",
output = "wide"
)
bos10<-bos_acs10%>%
select(-NAME)%>%
left_join(bos_acs10_pop, by = "GEOID")%>%
mutate(adjMHI = DP03_0062E*1.0935,
percEng = DP02_0111PE,
percWhite = 100*DP05_0032E/B01001_001E)%>%
mutate(GEOID = str_remove(bos_acs10$GEOID, "25025"))%>%
filter(!str_detect(GEOID, "^9"))
### ( total pop,
####  median income, Ed. Attainment: <9th, 9th-12th, HS Dip., some col, assoc deg, bach or higher,
####  white, black, Nat. Am., asian, HI or PAI,
##### lang at home eng only, lang at home other, lang other than eng and eng not spoken 'well')
# acs_vars<-c(#"B01001_001E",
#   "DP03_0062E", "DP02_0059E","DP02_0060E","DP02_0061E","DP02_0062E", "DP02_0063E",
#   "DP05_0032E", "DP05_0033E","DP05_0034E", "DP05_0039E", "DP05_0047E",
#   "DP02_0111PE", "DP02_0113E", "DP02_0114E")
bos10_trim<-bos10%>%
mutate(tot_pop = B01001_001E,
med_income = DP03_0062E, ed_hs = DP02_0059E+DP02_0060E+DP02_0061E,
rc_white =DP05_0032E, lang_eng = DP02_0111PE)%>%
select(GEOID, tot_pop, med_income, ed_hs, rc_white, lang_eng, percEng, percWhite)
write_csv(bos10_trim, "census-csv/bos_2010_trim.csv")
View(bos10_trim)
rm(list = ls())
##     2000 Census data by Tract of Suffolk county MA (Boston, ma)
## require(rvest)
## Scraping from FFIEC website (both pages)
bos001<-read_html("https://www.ffiec.gov/census/report.aspx?year=2000&county=025&tract=ALL&state=25&report=demographic")%>%
html_node("form table")%>%
html_table()
bos002<-read_html("https://www.ffiec.gov/census/report.aspx?year=2000&county=025&tract=ALL&state=25&report=demographic&page=2")%>%
html_node("form table")%>%
html_table()
bostract00<-rbind(bos001, bos002)
rm(bos001, bos002)
View(bostract00)
bos00<-bostract00
rm(bostract00)
View(bos00)
bos00<-bos00%>%
mutate(GEOID = ifelse(str_detect(as.character(tract), "\\."),
as.character(tract),
paste0(as.character(tract),".00")),
med_income00 = str_remove_all(med_income00, "[\\$\\,]"),
med_income90 = str_remove_all(med_income90, "[\\$\\,]"))
### Clean up names and select relevant variables
bos00<-bos00%>%
rename(tract = `Tract Code`, med_income00 = `2000 Est. Tract/ BNA Median Family Income`,
med_income90 = `1990 Tract/ BNA Median Family Income`, tot_pop = `Tract/ BNA Population`,
nonwhite_pop = `Minority Population`, owner_occ = `Owner Occupied Units`)%>%
select(tract, med_income00, med_income90, tot_pop, nonwhite_pop, owner_occ)
bos00<-bos00%>%
mutate(GEOID = ifelse(str_detect(as.character(tract), "\\."),
as.character(tract),
paste0(as.character(tract),".00")),
med_income00 = str_remove_all(med_income00, "[\\$\\,]"),
med_income90 = str_remove_all(med_income90, "[\\$\\,]"))
View(bos00)
##     2000 Census data by Tract of Suffolk county MA (Boston, ma)
## require(rvest)
## Scraping from FFIEC website (both pages)
bos001<-read_html("https://www.ffiec.gov/census/report.aspx?year=2000&county=025&tract=ALL&state=25&report=demographic")%>%
html_node("form table")%>%
html_table()
bos002<-read_html("https://www.ffiec.gov/census/report.aspx?year=2000&county=025&tract=ALL&state=25&report=demographic&page=2")%>%
html_node("form table")%>%
html_table()
bos00<-rbind(bos001, bos002)
rm(bos001, bos002)
### Clean up names and select relevant variables
bos00<-bos00%>%
rename(tract = as.character(`Tract Code`), med_income00 = `2000 Est. Tract/ BNA Median Family Income`,
med_income90 = `1990 Tract/ BNA Median Family Income`, tot_pop = `Tract/ BNA Population`,
nonwhite_pop = `Minority Population`, owner_occ = `Owner Occupied Units`)%>%
select(tract, med_income00, med_income90, tot_pop, nonwhite_pop, owner_occ)
### Clean up names and select relevant variables
bos00<-bos00%>%
rename(tract = `Tract Code`, med_income00 = `2000 Est. Tract/ BNA Median Family Income`,
med_income90 = `1990 Tract/ BNA Median Family Income`, tot_pop = `Tract/ BNA Population`,
nonwhite_pop = `Minority Population`, owner_occ = `Owner Occupied Units`)%>%
select(tract, med_income00, med_income90, tot_pop, nonwhite_pop, owner_occ)
bos00%>%mutate(tract = as.character(tract))
bos00<-bos00%>%mutate(tract = as.character(tract))
bos00<-bos00%>%mutate(tract = as.character(tract))%>%
mutate(GEOID = ifelse(str_detect(tract, "\\."),
tract,
paste0(tract,".00")),
med_income00 = str_remove_all(med_income00, "[\\$\\,]"),
med_income90 = str_remove_all(med_income90, "[\\$\\,]"))
bos00<-bos00%>%mutate(tract = as.character(tract))%>%
mutate(GEOID = ifelse(str_detect(tract, "\\."),
tract,
paste0(tract,".00")),
med_income00 = str_remove_all(med_income00, "[\\$\\,]"),
med_income90 = str_remove_all(med_income90, "[\\$\\,]"))%>%
mutate(GEOID = str_pad(GEOID, width = 7, pad = "0"))%>%
mutate(GEOID = str_remove(GEOID, "\\."))
write_csv(bos00, "census-csv/bos_2000.csv")
bos00<-select(bos00, -tract, -med_income90)
View(bos00)
bos90<-read_csv("census-csv/bos_90.csv")
bos10<-read_csv("census-csv/bos_2010_trim.csv")
View(bos10)
left_join(bos00, bos10, by = "GEOID")%>%View()
environment()
### '11 variables in order ( total pop,
######                       median income, Ed. Attainment: <9th, 9th-12th, HS Dip., some col, assoc deg, bach or higher,
######                       white, black, Nat. Am., asian, HI or PAI,
######                       lang at home eng only, lang at home other, lang other than eng and eng not spoken 'well')
acs_vars<-c(#"B01001_001E",
"DP03_0062E", "DP02_0059E","DP02_0060E","DP02_0061E","DP02_0062E", "DP02_0063E",
"DP05_0032E", "DP05_0033E","DP05_0034E", "DP05_0039E", "DP05_0047E",
"DP02_0111PE", "DP02_0113E", "DP02_0114E")
#######  call for data profiles  #########
#### cannot make a call to different API's at same time (ie different prefixes of variables)
bos_acs10<-get_acs(
geography = "tract", # size of municipalities to zoom in on
variables = acs_vars,
state = 'MA', # optional: State 25 is MA
county = 'Suffolk', # Suffolk county is '025'
year=2010,
geometry = T, # for map visualizations
survey = "acs5", # survey you are choosing from (also supports 'acs5')
output = "wide"
)
bos_acs10_pop<-get_acs(
geography = "tract",
variables = "B01001_001E",
state = 'MA',
county = 'Suffolk',
year=2010,
#geometry = T,
survey = "acs5",
output = "wide"
)
bos10<-bos_acs10%>%
select(-NAME)%>%
left_join(bos_acs10_pop, by = "GEOID")%>%
mutate(adjMHI = DP03_0062E*1.0935,
percEng_10 = DP02_0111PE,
percWhite_10 = 100*DP05_0032E/B01001_001E)%>%
mutate(GEOID = str_remove(bos_acs10$GEOID, "25025"))%>%
filter(!str_detect(GEOID, "^9"))
### ( total pop,
####  median income, Ed. Attainment: <9th, 9th-12th, HS Dip., some col, assoc deg, bach or higher,
####  white, black, Nat. Am., asian, HI or PAI,
##### lang at home eng only, lang at home other, lang other than eng and eng not spoken 'well')
# acs_vars<-c(#"B01001_001E",
#   "DP03_0062E", "DP02_0059E","DP02_0060E","DP02_0061E","DP02_0062E", "DP02_0063E",
#   "DP05_0032E", "DP05_0033E","DP05_0034E", "DP05_0039E", "DP05_0047E",
#   "DP02_0111PE", "DP02_0113E", "DP02_0114E")
bos10_trim<-bos10%>%
mutate(tot_pop_10 = B01001_001E,
med_income_10 = DP03_0062E, ed_hs_10 = DP02_0059E+DP02_0060E+DP02_0061E,
rc_white_10 =DP05_0032E, lang_eng_10 = DP02_0111PE)%>%
select(GEOID, tot_pop_10, med_income10, ed_hs_10, rc_white_10, lang_eng_10, percEng_10, percWhite_10)
### ( total pop,
####  median income, Ed. Attainment: <9th, 9th-12th, HS Dip., some col, assoc deg, bach or higher,
####  white, black, Nat. Am., asian, HI or PAI,
##### lang at home eng only, lang at home other, lang other than eng and eng not spoken 'well')
# acs_vars<-c(#"B01001_001E",
#   "DP03_0062E", "DP02_0059E","DP02_0060E","DP02_0061E","DP02_0062E", "DP02_0063E",
#   "DP05_0032E", "DP05_0033E","DP05_0034E", "DP05_0039E", "DP05_0047E",
#   "DP02_0111PE", "DP02_0113E", "DP02_0114E")
bos10_trim<-bos10%>%
mutate(tot_pop_10 = B01001_001E,
med_income_10 = DP03_0062E, ed_hs_10 = DP02_0059E+DP02_0060E+DP02_0061E,
rc_white_10 =DP05_0032E, lang_eng_10 = DP02_0111PE)%>%
select(GEOID, tot_pop_10, med_income_10, ed_hs_10, rc_white_10, lang_eng_10, percEng_10, percWhite_10)
write_csv(bos10_trim, "census-csv/bos_2010_trim.csv")
##     2000 Census data by Tract of Suffolk county MA (Boston, ma)
## require(rvest)
## Scraping from FFIEC website (both pages)
bos001<-read_html("https://www.ffiec.gov/census/report.aspx?year=2000&county=025&tract=ALL&state=25&report=demographic")%>%
html_node("form table")%>%
html_table()
bos002<-read_html("https://www.ffiec.gov/census/report.aspx?year=2000&county=025&tract=ALL&state=25&report=demographic&page=2")%>%
html_node("form table")%>%
html_table()
bos00<-rbind(bos001, bos002)
rm(bos001, bos002)
### Clean up names and select relevant variables
bos00<-bos00%>%
rename(tract = `Tract Code`, med_income_00 = `2000 Est. Tract/ BNA Median Family Income`,
med_income90 = `1990 Tract/ BNA Median Family Income`, tot_pop_00 = `Tract/ BNA Population`,
nonwhite_pop_00 = `Minority Population`, owner_occ_00 = `Owner Occupied Units`)%>%
select(tract, med_income_00, med_income90, tot_pop_00, nonwhite_pop_00, owner_occ_00)
## Fix GEOID to be 6-digit tract id
bos00<-bos00%>%mutate(tract = as.character(tract))%>%
mutate(GEOID = ifelse(str_detect(tract, "\\."),
tract,
paste0(tract,".00")),
med_income00 = str_remove_all(med_income00, "[\\$\\,]"),
med_income90 = str_remove_all(med_income90, "[\\$\\,]"))%>%
mutate(GEOID = str_pad(GEOID, width = 7, pad = "0"))%>%
mutate(GEOID = str_remove(GEOID, "\\."))%>%
select(-tract, -med_income90)
## Fix GEOID to be 6-digit tract id
bos00<-bos00%>%mutate(tract = as.character(tract))%>%
mutate(GEOID = ifelse(str_detect(tract, "\\."),
tract,
paste0(tract,".00")),
med_income00 = str_remove_all(med_income_00, "[\\$\\,]"),
med_income90 = str_remove_all(med_income90, "[\\$\\,]"))%>%
mutate(GEOID = str_pad(GEOID, width = 7, pad = "0"))%>%
mutate(GEOID = str_remove(GEOID, "\\."))%>%
select(-tract, -med_income90)
write_csv(bos00, "census-csv/bos_2000.csv")
rm(list = ls())
tract90<-read_csv("bos_90.csv")
tract90<-read_csv("census-csv/bos_90.csv")
View(tract90)
bos90<-tract90%>%
mutate(ed_hs_90 = ed_hs+ed_9+ed_912,
ed_ba_90 = ed_ba+ed_grad)%>%
rename(tot_pop_90 =tot_pop,
rc_white_90 = rc_white,
lang_eng_90 = hh_english,
med_income_90 = med_inc)%>%
select(GEOID, tot_pop_90, rc_white_90, lang_eng_90, med_income_90, ed_hs_90, ed_ba_90)
write_csv(bos90, "census-csv/bos_90.csv")
View(bos90)
rm(tract90)
bos00<-read_csv("census-csv/bos_2000.csv")
bos10<-read_csv("census-csv/bos_2010_trim.csv")
bos90<-read_csv("census-csv/bos_90.csv")
View(bos90)
View(bos10)
### bos10 has split tract 000300 into 000301, 000302
## So we summarize the two tracts into one tract to merge with '90 and '00
filter(bos00, GEOID == "000301")
### bos10 has split tract 000300 into 000301, 000302
## So we summarize the two tracts into one tract to merge with '90 and '00
filter(bos10, GEOID == "000301")
### bos10 has split tract 000300 into 000301, 000302
## So we summarize the two tracts into one tract to merge with '90 and '00
filter(bos10, GEOID == "000301"|"000302")
### bos10 has split tract 000300 into 000301, 000302
## So we summarize the two tracts into one tract to merge with '90 and '00
filter(bos10, GEOID == "000301", GEOID == "000302")
### bos10 has split tract 000300 into 000301, 000302
## So we summarize the two tracts into one tract to merge with '90 and '00
filter(bos10, GEOID == "000301" | GEOID == "000302")
filter(bos10, GEOID == "000301" | GEOID == "000302")%>%
summarise_all(tot_pop = sum(tot_pop_10),
med_income_10 = mean((tot_pop_10/tot_pop)*med_income_10))
med_inc<-
filter(bos10, GEOID == "000301" | GEOID == "000302")%>%
summarise_all(tot_pop = sum(tot_pop_10))
filter(bos10, GEOID == "000301" | GEOID == "000302")%>%
summarise_all()
filter(bos10, GEOID == "000301" | GEOID == "000302")%>%
summarise((tot_pop = sum(tot_pop_10))
filter(bos10, GEOID == "000301" | GEOID == "000302")%>%
summarise((tot_pop = sum(tot_pop_10))
filter(bos10, GEOID == "000301" | GEOID == "000302")%>%
summarise((tot_pop = sum(tot_pop_10)))
### bos10 has split tract 000300 into 000301, 000302
## So we summarize the two tracts into one tract to merge with '90 and '00
med_inc<-
filter(bos10, GEOID == "000301" | GEOID == "000302")%>%
summarise(tot_pop = sum(tot_pop_10))
View(med_inc)
filter(bos10, GEOID == "000301" | GEOID == "000302")%>%
summarise(tot_pop = sum(tot_pop_10),
med_income_10 = mean((tot_pop_10/tot_pop)*med_income_10))
filter(bos10, GEOID == "000301" | GEOID == "000302")
### bos10 has split tract 000300 into 000301, 000302
## So we summarize the two tracts into one tract to merge with '90 and '00
tract_300<-filter(bos10, GEOID == "000301" | GEOID == "000302")
rm(med_inc)
View(tract_300)
pop_300<-sum(tract_300$tot_pop_10)
(tract_300$tot_pop_10/pop_300*tract_300$med_income_10)
inc_300<-sum(tract_300$tot_pop_10/pop_300*tract_300$med_income_10)
######################
## Create 301, 302 by duplicating 300 for '90 and '00
## This retains the geometry to map out the tracts from '10 ACS data
filter(bos90, GEOID == "000300")
######################
## Create 301, 302 by duplicating 300 for '90 and '00
## This retains the geometry to map out the tracts from '10 ACS data
filter(bos90, GEOID == "000300")%>%mutate(GEOID = "000301")
######################
## Create 301, 302 by duplicating 300 for '90 and '00
## This retains the geometry to map out the tracts from '10 ACS data
tr_301<-filter(bos90, GEOID == "000300")%>%mutate(GEOID = "000301")
bos90%>%mutate(GEOID = ifelse(GEOID == "000300", "000302", GEOID))%>%View()
?rbind
bos90%>%mutate(GEOID = ifelse(GEOID == "000300", "000302", GEOID))%>%
bind_rows(tr_301)%>%View()
bos90<-bos90%>%mutate(GEOID = ifelse(GEOID == "000300", "000302", GEOID))%>%
bind_rows(tr_301)
tr_301<-filter(bos00, GEOID == "000300")%>%mutate(GEOID = "000301")
View(tr_301)
View(tract_300)
View(tr_301)
bos00<-bos00%>%select(-med_income_00)%>%
mutate(GEOID = ifelse(GEOID == "000300", "000302", GEOID))%>%
bind_rows(tr_301)
View(bos90)
bos90<-bos90%>%filter(GEOID != "000000")
left_join(bos00, bos10, by = "GEOID")%>%View()
View(bos00)
tr_301<-filter(bos00, GEOID == "000300")%>%mutate(GEOID = "000301")%>%select(-med_income_00)
bos00<-read_csv("census-csv/bos_2000.csv")
bos10<-read_csv("census-csv/bos_2010_trim.csv")
bos90<-read_csv("census-csv/bos_90.csv")
######################
## Create tracts 301, 302 by duplicating 300 for '90 and '00
## This retains the geometry to map out the tracts from '10 ACS data
tr_301<-filter(bos90, GEOID == "000300")%>%mutate(GEOID = "000301")
bos90<-bos90%>%filter(GEOID != "000000")%>%
mutate(GEOID = ifelse(GEOID == "000300", "000302", GEOID))%>%
bind_rows(tr_301)
tr_301<-filter(bos00, GEOID == "000300")%>%mutate(GEOID = "000301")%>%select(-med_income_00)
bos00<-bos00%>%select(-med_income_00)%>%
mutate(GEOID = ifelse(GEOID == "000300", "000302", GEOID))%>%
bind_rows(tr_301)
left_join(bos00, bos10, by = "GEOID")%>%View()
left_join(bos00, bos10, by = "GEOID")%>%left_join(bos90, by = "GEOID")
left_join(bos00, bos10, by = "GEOID")%>%left_join(bos90, by = "GEOID")%>%View()
filter(bos10, GEOID == "000501")
View(bos10)
bos_all<-left_join(bos00, bos10, by = "GEOID")%>%left_join(bos90, by = "GEOID")%>%View()
bos_all<-left_join(bos00, bos10, by = "GEOID")%>%left_join(bos90, by = "GEOID")
write_csv(bos_all, "census-csv/bos_all.csv")
require(tidyverse)
bos00<-read_csv("census-csv/bos_2000.csv")
bos10<-read_csv("census-csv/bos_2010_trim.csv")
bos90<-read_csv("census-csv/bos_90.csv")
full_join(boss00$GEOID, bos10$GEOID)
full_join(bos00$GEOID, bos10$GEOID)
full_join(bos00[1,], bos10$GEOID)
bos00[1,]
bos00[,"GEOID"]
full_join(bos00[,"GEOID"], bos10[,"GEOID"])
inc_00<-bos00%>%select(GEOID, med_income00)
inc_10<-bos10%>%select(GEOID, med_income_10)
full_join(inc_00, inc_00, by = "GEOID")
full_join(inc_00, inc_00, by = "GEOID")%>%View(
)
inc_90<-bos90%>%select(GEOID, med_income_90)
full_join(inc_00, inc_00, by = "GEOID")%>%
full_join(inc_90, by="GEOID")
full_join(inc_00, inc_00, by = "GEOID")%>%
full_join(inc_90, by="GEOID")%>%
View()
View(bos10)
bos_all<-left_join(bos00, bos10, by = "GEOID")%>%left_join(bos90, by = "GEOID")
View(bos_all)
bos_all<-full_join(bos00, bos10, by = "GEOID")%>%full_join(bos90, by = "GEOID")
?full_join
anti_join(inc_00, inc_00, by = "GEOID")
anti_join(inc_10, inc_00, by = "GEOID")
anti_join(inc_10, inc_00, by = "GEOID")%>%View()
full_join(inc_10, inc_00, by = "GEOID")%>%View()
full_join(inc_10, inc_00, by = "GEOID")%>%
full_join(inc_90, by="GEOID")%>%
View()
